{"ast":null,"code":"/**\r\n * Copyright 2018 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */'use strict';import firebase from\"firebase/app\";import\"firebase/auth\";import\"firebase/firestore\";// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nvar firebaseConfig={apiKey:\"AIzaSyAwcnfyJDrxYTVGnbGJ39pwyRPmbbln8jI\",authDomain:\"tabulate-da8ac.firebaseapp.com\",projectId:\"tabulate-da8ac\",storageBucket:\"tabulate-da8ac.appspot.com\",messagingSenderId:\"600957298630\",appId:\"1:600957298630:web:8dff818513beaf9c9734c7\",measurementId:\"G-FRRT9SB5QF\"};// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);console.log(firebase);export var auth=firebase.auth();// Signs-in Friendly Chat.\nexport function signIn(){// TODO 1: Sign in Firebase with credential from the Google user.\n// Sign into Firebase using popup auth & Google as the identity provider.\nvar provider=new firebase.auth.GoogleAuthProvider();firebase.auth().signInWithPopup(provider);}// Signs-out of Friendly Chat.\nexport function signOut(){// TODO 2: Sign out of Firebase.\nfirebase.auth().signOut();}// Initiate firebase auth.\n// export function initFirebaseAuth() {\n//   // TODO 3: Initialize Firebase.\n//   firebase.auth().onAuthStateChanged(authStateObserver);\n// }\n// Returns the signed-in user's profile Pic URL.\nfunction getProfilePicUrl(){// TODO 4: Return the user's profile pic URL.\nreturn firebase.auth().currentUser.photoURL||'/images/profile_placeholder.png';}// Returns the signed-in user's display name.\nexport function getUserName(){// TODO 5: Return the user's display name.\nreturn firebase.auth().currentUser.displayName;}// Returns true if a user is signed-in.\nexport function isUserSignedIn(){// TODO 6: Return true if a user is signed-in.\nreturn!!firebase.auth().currentUser;}export function addWidget(widgetTitle){// Add a new message entry to the database.\nvar user=firebase.firestore().collection(\"widget2\").doc(getUserName());console.log(\"64\",user);if(user){user.get().then(function(doc){var tempWidgets=doc.data().widgets;return tempWidgets;}).then(function(tempWidgets){console.log(\"70\",tempWidgets);tempWidgets.push({title:widgetTitle,links:[]});console.log(\"73\",tempWidgets);return user.update({name:getUserName(),//widgets: [{widgetTitle: \"bruh\", links: [{linkName : url}, {}, {}]}],\nwidgets:tempWidgets,timestamp:firebase.firestore.FieldValue.serverTimestamp()},{merge:true}).catch(function(error){console.error('Error writing new message to database',error);});});}else{console.log(\"fuckin a\");return user.set({name:getUserName(),widgets:[{title:widgetTitle,links:[]}],// do this at sign-in\ntimestamp:firebase.firestore.FieldValue.serverTimestamp()}).catch(function(error){console.error('Error writing new message to database',error);});}}export function addLinkToWidget(widgetName,website,url){// Add a new message entry to the database.\nvar user=firebase.firestore().collection(\"widget2\").doc(getUserName());var tempWidgets=[\"check this\"];console.log(\"92\");user.get().then(function(doc){console.log(\"96\",doc.data());tempWidgets=doc.data().widgets;console.log(\"98\",tempWidgets);var toEdit=tempWidgets.find(function(obj){return obj.title===widgetName;});console.log(\"103\",toEdit);toEdit.links.push({url:url,name:website});tempWidgets.map(function(obj){return obj;});console.log(\"108\",toEdit);console.log(\"109\",tempWidgets);}).then(function(){console.log(\"111\",tempWidgets);return user.update({name:getUserName(),//widgets: [{widgetTitle: \"bruh\", links: [{linkName : url}, {}, {}]}],\nwidgets:tempWidgets,timestamp:firebase.firestore.FieldValue.serverTimestamp()},{merge:true}).catch(function(error){console.error('Error writing new message to database',error);});}).catch(function(error){console.log(\"Error getting document:\",error);});}// Loads chat messages history and listens for upcoming ones.\n// Returns true if user is signed-in. Otherwise false and displays a message.\nexport function checkSignedInWithMessage(){// Return true if the user is signed in Firebase\nif(isUserSignedIn()){return true;}}// Resets the given MaterialTextField.\nexport function resetMaterialTextfield(element){element.value='';element.parentNode.MaterialTextfield.boundUpdateClassesHandler();}// Checks that the Firebase SDK has been correctly setup and configured.\nexport function checkSetup(){if(!window.firebase||!(firebase.app instanceof Function)||!firebase.app().options){window.alert('You have not configured and imported the Firebase SDK. '+'Make sure you go through the codelab setup instructions and make '+'sure you are running the codelab using `firebase serve`');}}checkSetup();// initialize Firebase\n// initFirebaseAuth();\n// TODO: Enable Firebase Performance Monitoring.\n// We load currently existing chat messages and listen to new ones.\nexport function bruh(){console.log(\"have a wonderful day!\");}","map":{"version":3,"sources":["C:/Users/EthanP/Documents/cubstart/tabulate/tab-ulate/src/scripts/login.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","console","log","auth","signIn","provider","GoogleAuthProvider","signInWithPopup","signOut","getProfilePicUrl","currentUser","photoURL","getUserName","displayName","isUserSignedIn","addWidget","widgetTitle","user","firestore","collection","doc","get","then","tempWidgets","data","widgets","push","title","links","update","name","timestamp","FieldValue","serverTimestamp","merge","catch","error","set","addLinkToWidget","widgetName","website","url","toEdit","find","obj","map","checkSignedInWithMessage","resetMaterialTextfield","element","value","parentNode","MaterialTextfield","boundUpdateClassesHandler","checkSetup","window","app","Function","options","alert","bruh"],"mappings":"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","sourcesContent":["/**\r\n * Copyright 2018 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n'use strict';\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\n// Your web app's Firebase configuration\r\n  // For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n  const firebaseConfig = {\r\n    apiKey: \"AIzaSyAwcnfyJDrxYTVGnbGJ39pwyRPmbbln8jI\",\r\n    authDomain: \"tabulate-da8ac.firebaseapp.com\",\r\n    projectId: \"tabulate-da8ac\",\r\n    storageBucket: \"tabulate-da8ac.appspot.com\",\r\n    messagingSenderId: \"600957298630\",\r\n    appId: \"1:600957298630:web:8dff818513beaf9c9734c7\",\r\n    measurementId: \"G-FRRT9SB5QF\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  console.log(firebase);\r\n\r\nexport const auth = firebase.auth();\r\n\r\n// Signs-in Friendly Chat.\r\nexport function signIn() {\r\n  // TODO 1: Sign in Firebase with credential from the Google user.\r\n  // Sign into Firebase using popup auth & Google as the identity provider.\r\n  let provider = new firebase.auth.GoogleAuthProvider();\r\n  firebase.auth().signInWithPopup(provider);\r\n}\r\n\r\n// Signs-out of Friendly Chat.\r\nexport function signOut() {\r\n  // TODO 2: Sign out of Firebase.\r\n  firebase.auth().signOut();\r\n\r\n}\r\n\r\n// Initiate firebase auth.\r\n// export function initFirebaseAuth() {\r\n//   // TODO 3: Initialize Firebase.\r\n//   firebase.auth().onAuthStateChanged(authStateObserver);\r\n// }\r\n\r\n// Returns the signed-in user's profile Pic URL.\r\nfunction getProfilePicUrl() {\r\n  // TODO 4: Return the user's profile pic URL.\r\n  return firebase.auth().currentUser.photoURL || '/images/profile_placeholder.png';\r\n}\r\n\r\n// Returns the signed-in user's display name.\r\nexport function getUserName() {\r\n  // TODO 5: Return the user's display name.\r\n  return firebase.auth().currentUser.displayName;\r\n\r\n}\r\n\r\n// Returns true if a user is signed-in.\r\nexport function isUserSignedIn() {\r\n  // TODO 6: Return true if a user is signed-in.\r\n  return !!firebase.auth().currentUser;\r\n}\r\n\r\nexport function addWidget(widgetTitle) {\r\n  // Add a new message entry to the database.\r\n  let user = firebase.firestore().collection(\"widget2\").doc(getUserName());\r\n  console.log(\"64\", user)\r\n\r\n  if (user) {\r\n    user.get().then((doc) => {\r\n      let tempWidgets = doc.data().widgets;\r\n      return tempWidgets\r\n    }).then((tempWidgets) => {\r\n      console.log(\"70\", tempWidgets)\r\n\r\n      tempWidgets.push({title: widgetTitle, links: []});\r\n      console.log(\"73\", tempWidgets)\r\n      \r\n      \r\n      return user.update({\r\n        name: getUserName(),\r\n        //widgets: [{widgetTitle: \"bruh\", links: [{linkName : url}, {}, {}]}],\r\n        widgets: tempWidgets,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n      }, { merge: true }).catch(function (error) {\r\n        console.error('Error writing new message to database', error);\r\n      });\r\n    })\r\n    }\r\n  else {\r\n    console.log(\"fuckin a\")\r\n    return user.set({\r\n      name: getUserName(),\r\n      widgets: [{ title: widgetTitle, links: [] }], // do this at sign-in\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n    }).catch(function (error) {\r\n      console.error('Error writing new message to database', error);\r\n    });\r\n  }\r\n}\r\n\r\nexport function addLinkToWidget(widgetName, website, url) {\r\n  // Add a new message entry to the database.\r\n  let user = firebase.firestore().collection(\"widget2\").doc(getUserName());\r\n\r\n  let tempWidgets = [\"check this\"];\r\n  console.log(\"92\")\r\n\r\n\r\n  user.get().then((doc) => {\r\n    console.log(\"96\", doc.data())\r\n    tempWidgets = doc.data().widgets;\r\n    console.log(\"98\", tempWidgets)\r\n\r\n    const toEdit = tempWidgets.find(obj => {\r\n      return obj.title === widgetName\r\n    });\r\n    console.log(\"103\", toEdit)\r\n\r\n\r\n    toEdit.links.push({ url: url, name: website });\r\n    tempWidgets.map(obj => obj); \r\n    console.log(\"108\", toEdit)\r\n    console.log(\"109\", tempWidgets)\r\n\r\n  }).then(() => {console.log(\"111\", tempWidgets);\r\n\r\n  return user.update({\r\n    name: getUserName(),\r\n    //widgets: [{widgetTitle: \"bruh\", links: [{linkName : url}, {}, {}]}],\r\n    widgets: tempWidgets,\r\n    timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n  }, { merge: true }).catch(function (error) {\r\n    console.error('Error writing new message to database', error);\r\n  });\r\n}).catch((error) => {\r\n  console.log(\"Error getting document:\", error);\r\n})\r\n\r\n\r\n  \r\n\r\n  \r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n// Loads chat messages history and listens for upcoming ones.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Returns true if user is signed-in. Otherwise false and displays a message.\r\nexport function checkSignedInWithMessage() {\r\n  // Return true if the user is signed in Firebase\r\n  if (isUserSignedIn()) {\r\n    return true;\r\n  }\r\n}\r\n// Resets the given MaterialTextField.\r\nexport function resetMaterialTextfield(element) {\r\n  element.value = '';\r\n  element.parentNode.MaterialTextfield.boundUpdateClassesHandler();\r\n}\r\n\r\n\r\n// Checks that the Firebase SDK has been correctly setup and configured.\r\nexport function checkSetup() {\r\n  if (!window.firebase || !(firebase.app instanceof Function) || !firebase.app().options) {\r\n    window.alert('You have not configured and imported the Firebase SDK. ' +\r\n      'Make sure you go through the codelab setup instructions and make ' +\r\n      'sure you are running the codelab using `firebase serve`');\r\n  }\r\n}\r\ncheckSetup();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// initialize Firebase\r\n// initFirebaseAuth();\r\n\r\n// TODO: Enable Firebase Performance Monitoring.\r\n\r\n// We load currently existing chat messages and listen to new ones.\r\n\r\n\r\nexport function bruh() {\r\n  console.log(\"have a wonderful day!\");\r\n}\r\n"]},"metadata":{},"sourceType":"module"}