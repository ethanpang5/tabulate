{"ast":null,"code":"/**\r\n * Copyright 2018 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\"use strict\";import firebase from\"firebase/app\";import\"firebase/auth\";import\"firebase/firestore\";// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nvar firebaseConfig={apiKey:\"AIzaSyAwcnfyJDrxYTVGnbGJ39pwyRPmbbln8jI\",authDomain:\"tabulate-da8ac.firebaseapp.com\",projectId:\"tabulate-da8ac\",storageBucket:\"tabulate-da8ac.appspot.com\",messagingSenderId:\"600957298630\",appId:\"1:600957298630:web:8dff818513beaf9c9734c7\",measurementId:\"G-FRRT9SB5QF\"};// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);console.log(firebase);export var auth=firebase.auth();export var db=firebase.firestore();// Signs-in to TabUlate.\nexport function signIn(){// TODO 1: Sign in Firebase with credential from the Google user.\n// Sign into Firebase using popup auth & Google as the identity provider.\nvar provider=new firebase.auth.GoogleAuthProvider();firebase.auth().signInWithPopup(provider).then(function(){var user=firebase.firestore().collection(\"users\").doc(getUserName());user.get().then(function(doc){if(!doc.exists){user.set({name:getUserName(),widgets:[],// do this at sign-in\ntimestamp:firebase.firestore.FieldValue.serverTimestamp()}).catch(function(error){console.error(\"Error writing new message to database\",error);});}});}).catch(function(error){console.error(\"Error signing in\",error);});}// Signs-out of TabUlate.\nexport function signOut(){firebase.auth().signOut();}// Initiate firebase auth.\n// export function initFirebaseAuth() {\n//   // TODO 3: Initialize Firebase.\n//   firebase.auth().onAuthStateChanged(authStateObserver);\n// }\n// Returns the signed-in user's profile Pic URL.\nexport function getProfilePicUrl(){return firebase.auth().currentUser.photoURL||\"https://lh3.googleusercontent.com/-5NpIVUCd2lE/AAAAAAAAAAI/AAAAAAAAAAA/AMZuucmn22K-OnZPInLvX19yR_TVKiUFCA/s96-c/photo.jpg\";}// Returns the signed-in user's display name.\nexport function getUserName(){return firebase.auth().currentUser.displayName;}// Returns true if a user is signed-in.\nexport function isUserSignedIn(){return!!firebase.auth().currentUser;}export function addWidget(widgetTitle){// Add a new message entry to the database.\nvar user=firebase.firestore().collection(\"users\").doc(getUserName());if(user){user.get().then(function(doc){var tempWidgets=doc.data().widgets;return tempWidgets;}).then(function(tempWidgets){tempWidgets.push({title:widgetTitle,links:[]});return user.update({name:getUserName(),widgets:tempWidgets,timestamp:firebase.firestore.FieldValue.serverTimestamp()},{merge:true}).catch(function(error){console.error(\"Error writing new message to database\",error);});});}}export function getWidgets(){// returns the current user's widgets\nreturn new Promise(function(){var user=firebase.firestore().collection(\"users\").doc(getUserName());user.get().then(function(doc){if(doc.exists){return doc.data().widgets;}else{}});});}export function addLinkToWidget(widgetName,website,url){// Add a new message entry to the database.\nvar user=firebase.firestore().collection(\"users\").doc(getUserName());var tempWidgets=[\"check this\"];user.get().then(function(doc){tempWidgets=doc.data().widgets;var toEdit=tempWidgets.find(function(obj){return obj.title===widgetName;});toEdit.links.push({url:url,name:website});tempWidgets.map(function(obj){return obj;});}).then(function(){return user.update({name:getUserName(),//widgets: [{widgetTitle: \"bruh\", links: [{linkName : url}, {}, {}]}],\nwidgets:tempWidgets,timestamp:firebase.firestore.FieldValue.serverTimestamp()},{merge:true}).catch(function(error){console.error(\"Error writing new message to database\",error);});}).catch(function(error){console.log(\"Error getting document:\",error);});}export function deleteLink(widgetName,url){var user=firebase.firestore().collection(\"users\").doc(getUserName());user.get().then(function(doc){if(doc.exists){return doc.data().widgets;}else{}}).then(function(widgets){var widget=widgets.find(function(obj){return obj.title==widgetName;});widget.links=widget.links.filter(function(obj){return obj.url!==url;});user.update({name:getUserName(),widgets:widgets,timestamp:firebase.firestore.FieldValue.serverTimestamp()},{merge:true}).catch(function(error){console.error(\"Error writing new message to database\",error);});});}export function deleteWidget(widgetName){var user=firebase.firestore().collection(\"users\").doc(getUserName());user.get().then(function(doc){if(doc.exists){return doc.data().widgets;}else{}}).then(function(widgets){var newState=widgets.filter(function(obj){return obj.title!==widgetName;});user.update({name:getUserName(),widgets:newState,timestamp:firebase.firestore.FieldValue.serverTimestamp()},{merge:true}).catch(function(error){console.error(\"Error writing new message to database\",error);});});}export function changeWidgetTitle(widgetName,newWidgetTitle){var user=firebase.firestore().collection(\"users\").doc(getUserName());user.get().then(function(doc){if(doc.exists){return doc.data().widgets;}}).then(function(widgets){var widget=widgets.find(function(obj){return obj.title===widgetName;});widget.title=newWidgetTitle;console.log(\"title:\",widget.title);user.update({name:getUserName(),widgets:widgets,timestamp:firebase.firestore.FieldValue.serverTimestamp()},{merge:true}).catch(function(error){console.error(\"Error writing new message to database\",error);});});}// Loads chat messages history and listens for upcoming ones.\n// Returns true if user is signed-in. Otherwise false and displays a message.\nexport function checkSignedInWithMessage(){// Return true if the user is signed in Firebase\nif(isUserSignedIn()){return true;}}// Resets the given MaterialTextField.\nexport function resetMaterialTextfield(element){element.value=\"\";element.parentNode.MaterialTextfield.boundUpdateClassesHandler();}// Checks that the Firebase SDK has been correctly setup and configured.\nexport function checkSetup(){if(!window.firebase||!(firebase.app instanceof Function)||!firebase.app().options){window.alert(\"You have not configured and imported the Firebase SDK. \"+\"Make sure you go through the codelab setup instructions and make \"+\"sure you are running the codelab using `firebase serve`\");}}checkSetup();// initialize Firebase\n// initFirebaseAuth();\n// TODO: Enable Firebase Performance Monitoring.\n// We load currently existing chat messages and listen to new ones.","map":{"version":3,"sources":["C:/Users/EthanP/Documents/cubstart/tabulate/tab-ulate/src/scripts/login.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","console","log","auth","db","firestore","signIn","provider","GoogleAuthProvider","signInWithPopup","then","user","collection","doc","getUserName","get","exists","set","name","widgets","timestamp","FieldValue","serverTimestamp","catch","error","signOut","getProfilePicUrl","currentUser","photoURL","displayName","isUserSignedIn","addWidget","widgetTitle","tempWidgets","data","push","title","links","update","merge","getWidgets","Promise","addLinkToWidget","widgetName","website","url","toEdit","find","obj","map","deleteLink","widget","filter","deleteWidget","newState","changeWidgetTitle","newWidgetTitle","checkSignedInWithMessage","resetMaterialTextfield","element","value","parentNode","MaterialTextfield","boundUpdateClassesHandler","checkSetup","window","app","Function","options","alert"],"mappings":"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","sourcesContent":["/**\r\n * Copyright 2018 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\"use strict\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAwcnfyJDrxYTVGnbGJ39pwyRPmbbln8jI\",\r\n  authDomain: \"tabulate-da8ac.firebaseapp.com\",\r\n  projectId: \"tabulate-da8ac\",\r\n  storageBucket: \"tabulate-da8ac.appspot.com\",\r\n  messagingSenderId: \"600957298630\",\r\n  appId: \"1:600957298630:web:8dff818513beaf9c9734c7\",\r\n  measurementId: \"G-FRRT9SB5QF\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nconsole.log(firebase);\r\n\r\nexport const auth = firebase.auth();\r\nexport const db = firebase.firestore();\r\n// Signs-in to TabUlate.\r\nexport function signIn() {\r\n  // TODO 1: Sign in Firebase with credential from the Google user.\r\n  // Sign into Firebase using popup auth & Google as the identity provider.\r\n  let provider = new firebase.auth.GoogleAuthProvider();\r\n  firebase\r\n    .auth()\r\n    .signInWithPopup(provider)\r\n    .then(() => {\r\n      let user = firebase.firestore().collection(\"users\").doc(getUserName());\r\n      user.get().then((doc) => {\r\n        if (!doc.exists) {\r\n          user\r\n            .set({\r\n              name: getUserName(),\r\n              widgets: [], // do this at sign-in\r\n              timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            })\r\n            .catch(function (error) {\r\n              console.error(\"Error writing new message to database\", error);\r\n            });\r\n        }\r\n      });\r\n    })\r\n    .catch(function (error) {\r\n      console.error(\"Error signing in\", error);\r\n    });\r\n}\r\n\r\n// Signs-out of TabUlate.\r\nexport function signOut() {\r\n  firebase.auth().signOut();\r\n}\r\n\r\n// Initiate firebase auth.\r\n// export function initFirebaseAuth() {\r\n//   // TODO 3: Initialize Firebase.\r\n//   firebase.auth().onAuthStateChanged(authStateObserver);\r\n// }\r\n\r\n// Returns the signed-in user's profile Pic URL.\r\nexport function getProfilePicUrl() {\r\n  return (\r\n    firebase.auth().currentUser.photoURL ||\r\n    \"https://lh3.googleusercontent.com/-5NpIVUCd2lE/AAAAAAAAAAI/AAAAAAAAAAA/AMZuucmn22K-OnZPInLvX19yR_TVKiUFCA/s96-c/photo.jpg\"\r\n  );\r\n}\r\n\r\n// Returns the signed-in user's display name.\r\nexport function getUserName() {\r\n  return firebase.auth().currentUser.displayName;\r\n}\r\n\r\n// Returns true if a user is signed-in.\r\nexport function isUserSignedIn() {\r\n  return !!firebase.auth().currentUser;\r\n}\r\n\r\nexport function addWidget(widgetTitle) {\r\n  // Add a new message entry to the database.\r\n  let user = firebase.firestore().collection(\"users\").doc(getUserName());\r\n\r\n  if (user) {\r\n    user\r\n      .get()\r\n      .then((doc) => {\r\n        let tempWidgets = doc.data().widgets;\r\n        return tempWidgets;\r\n      })\r\n      .then((tempWidgets) => {\r\n        tempWidgets.push({ title: widgetTitle, links: [] });\r\n\r\n        return user\r\n          .update(\r\n            {\r\n              name: getUserName(),\r\n              widgets: tempWidgets,\r\n              timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            },\r\n            { merge: true }\r\n          )\r\n          .catch(function (error) {\r\n            console.error(\"Error writing new message to database\", error);\r\n          });\r\n      });\r\n  }\r\n}\r\n\r\n\r\nexport function getWidgets() {\r\n  // returns the current user's widgets\r\n\r\n  return new Promise(() => {\r\n    let user = firebase.firestore().collection(\"users\").doc(getUserName());\r\n    user.get().then((doc) => {\r\n      if (doc.exists) {\r\n        return doc.data().widgets;\r\n      } else {\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nexport function addLinkToWidget(widgetName, website, url) {\r\n  // Add a new message entry to the database.\r\n  let user = firebase.firestore().collection(\"users\").doc(getUserName());\r\n\r\n  let tempWidgets = [\"check this\"];\r\n\r\n  user\r\n    .get()\r\n    .then((doc) => {\r\n      tempWidgets = doc.data().widgets;\r\n      const toEdit = tempWidgets.find((obj) => {\r\n        return obj.title === widgetName;\r\n      });\r\n\r\n      toEdit.links.push({ url: url, name: website });\r\n      tempWidgets.map((obj) => obj);\r\n    })\r\n    .then(() => {\r\n      return user\r\n        .update(\r\n          {\r\n            name: getUserName(),\r\n            //widgets: [{widgetTitle: \"bruh\", links: [{linkName : url}, {}, {}]}],\r\n            widgets: tempWidgets,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n          },\r\n          { merge: true }\r\n        )\r\n        .catch(function (error) {\r\n          console.error(\"Error writing new message to database\", error);\r\n        });\r\n    })\r\n    .catch((error) => {\r\n      console.log(\"Error getting document:\", error);\r\n    });\r\n}\r\n\r\nexport function deleteLink(widgetName, url) {\r\n  let user = firebase.firestore().collection(\"users\").doc(getUserName());\r\n\r\n  user\r\n    .get()\r\n    .then((doc) => {\r\n      if (doc.exists) {\r\n        return doc.data().widgets;\r\n      } else {\r\n      }\r\n    })\r\n    .then((widgets) => {\r\n      let widget = widgets.find((obj) => {\r\n        return obj.title == widgetName;\r\n      });\r\n      widget.links = widget.links.filter((obj) => {\r\n        return obj.url !== url;\r\n      });\r\n\r\n      user\r\n        .update(\r\n          {\r\n            name: getUserName(),\r\n            widgets: widgets,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n          },\r\n          { merge: true }\r\n        )\r\n        .catch(function (error) {\r\n          console.error(\"Error writing new message to database\", error);\r\n        });\r\n    });\r\n}\r\n\r\nexport function deleteWidget(widgetName) {\r\n  let user = firebase.firestore().collection(\"users\").doc(getUserName());\r\n\r\n  user\r\n    .get()\r\n    .then((doc) => {\r\n      if (doc.exists) {\r\n        return doc.data().widgets;\r\n      } else {\r\n      }\r\n    })\r\n    .then((widgets) => {\r\n      const newState = widgets.filter((obj) => {\r\n        return obj.title !== widgetName;\r\n      });\r\n\r\n      user\r\n        .update(\r\n          {\r\n            name: getUserName(),\r\n            widgets: newState,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n          },\r\n          { merge: true }\r\n        )\r\n        .catch(function (error) {\r\n          console.error(\"Error writing new message to database\", error);\r\n        });\r\n    });\r\n}\r\n\r\nexport function changeWidgetTitle(widgetName, newWidgetTitle) {\r\n  let user = firebase.firestore().collection(\"users\").doc(getUserName());\r\n  user\r\n    .get()\r\n    .then((doc) => {\r\n      if (doc.exists) {\r\n        return doc.data().widgets;\r\n      }\r\n    })\r\n    .then((widgets) => {\r\n      const widget = widgets.find((obj) => {\r\n        return obj.title === widgetName;\r\n      });\r\n      widget.title = newWidgetTitle;\r\n      console.log(\"title:\", widget.title)\r\n      user\r\n        .update(\r\n          {\r\n            name: getUserName(),\r\n            widgets: widgets,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n          },\r\n          { merge: true }\r\n        )\r\n        .catch(function (error) {\r\n          console.error(\"Error writing new message to database\", error);\r\n        });\r\n    });\r\n}\r\n\r\n// Loads chat messages history and listens for upcoming ones.\r\n\r\n// Returns true if user is signed-in. Otherwise false and displays a message.\r\nexport function checkSignedInWithMessage() {\r\n  // Return true if the user is signed in Firebase\r\n  if (isUserSignedIn()) {\r\n    return true;\r\n  }\r\n}\r\n// Resets the given MaterialTextField.\r\nexport function resetMaterialTextfield(element) {\r\n  element.value = \"\";\r\n  element.parentNode.MaterialTextfield.boundUpdateClassesHandler();\r\n}\r\n\r\n// Checks that the Firebase SDK has been correctly setup and configured.\r\nexport function checkSetup() {\r\n  if (\r\n    !window.firebase ||\r\n    !(firebase.app instanceof Function) ||\r\n    !firebase.app().options\r\n  ) {\r\n    window.alert(\r\n      \"You have not configured and imported the Firebase SDK. \" +\r\n        \"Make sure you go through the codelab setup instructions and make \" +\r\n        \"sure you are running the codelab using `firebase serve`\"\r\n    );\r\n  }\r\n}\r\ncheckSetup();\r\n\r\n// initialize Firebase\r\n// initFirebaseAuth();\r\n\r\n// TODO: Enable Firebase Performance Monitoring.\r\n\r\n// We load currently existing chat messages and listen to new ones.\r\n\r\n"]},"metadata":{},"sourceType":"module"}