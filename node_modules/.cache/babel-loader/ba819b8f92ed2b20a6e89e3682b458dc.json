{"ast":null,"code":"/**\r\n * Copyright 2018 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\"use strict\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\"; // Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAwcnfyJDrxYTVGnbGJ39pwyRPmbbln8jI\",\n  authDomain: \"tabulate-da8ac.firebaseapp.com\",\n  projectId: \"tabulate-da8ac\",\n  storageBucket: \"tabulate-da8ac.appspot.com\",\n  messagingSenderId: \"600957298630\",\n  appId: \"1:600957298630:web:8dff818513beaf9c9734c7\",\n  measurementId: \"G-FRRT9SB5QF\"\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\nconsole.log(firebase);\nexport const auth = firebase.auth();\nexport const db = firebase.firestore(); // Signs-in to TabUlate.\n\nexport function signIn() {\n  // TODO 1: Sign in Firebase with credential from the Google user.\n  // Sign into Firebase using popup auth & Google as the identity provider.\n  let provider = new firebase.auth.GoogleAuthProvider();\n  firebase.auth().signInWithPopup(provider).then(() => {\n    let user = firebase.firestore().collection(\"users\").doc(getUserName());\n    user.get().then(doc => {\n      if (!doc.exists) {\n        user.set({\n          name: getUserName(),\n          widgets: [],\n          // do this at sign-in\n          timestamp: firebase.firestore.FieldValue.serverTimestamp()\n        }).catch(function (error) {\n          console.error(\"Error writing new message to database\", error);\n        });\n      }\n    });\n  }).catch(function (error) {\n    console.error(\"Error signing in\", error);\n  });\n} // Signs-out of TabUlate.\n\nexport function signOut() {\n  firebase.auth().signOut();\n} // Initiate firebase auth.\n// export function initFirebaseAuth() {\n//   // TODO 3: Initialize Firebase.\n//   firebase.auth().onAuthStateChanged(authStateObserver);\n// }\n// Returns the signed-in user's profile Pic URL.\n\nexport function getProfilePicUrl() {\n  return firebase.auth().currentUser.photoURL || \"https://lh3.googleusercontent.com/-5NpIVUCd2lE/AAAAAAAAAAI/AAAAAAAAAAA/AMZuucmn22K-OnZPInLvX19yR_TVKiUFCA/s96-c/photo.jpg\";\n} // Returns the signed-in user's display name.\n\nexport function getUserName() {\n  return firebase.auth().currentUser.displayName;\n} // Returns true if a user is signed-in.\n\nexport function isUserSignedIn() {\n  return !!firebase.auth().currentUser;\n}\nexport function addWidget(widgetTitle) {\n  // Add a new message entry to the database.\n  let user = firebase.firestore().collection(\"users\").doc(getUserName());\n  console.log(\"78\", user);\n\n  if (user) {\n    user.get().then(doc => {\n      let tempWidgets = doc.data().widgets;\n      return tempWidgets;\n    }).then(tempWidgets => {\n      console.log(\"70\", tempWidgets);\n      tempWidgets.push({\n        title: widgetTitle,\n        links: []\n      });\n      console.log(\"73\", tempWidgets);\n      return user.update({\n        name: getUserName(),\n        widgets: tempWidgets,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp()\n      }, {\n        merge: true\n      }).catch(function (error) {\n        console.error(\"Error writing new message to database\", error);\n      });\n    });\n  }\n}\nexport function getWidgets() {\n  // returns the current user's widgets\n  return new Promise(() => {\n    let user = firebase.firestore().collection(\"users\").doc(getUserName());\n    console.log(\"firebase:\", user);\n    user.get().then(doc => {\n      if (doc.exists) {\n        console.log(\"doc exists\", doc.data().widgets);\n        return doc.data().widgets;\n      } else {\n        console.log(\"doc doesn't exit\");\n      }\n    });\n  });\n}\nexport function addLinkToWidget(widgetName, website, url) {\n  // Add a new message entry to the database.\n  let user = firebase.firestore().collection(\"users\").doc(getUserName());\n  let tempWidgets = [\"check this\"];\n  console.log(\"92\");\n  user.get().then(doc => {\n    tempWidgets = doc.data().widgets;\n    const toEdit = tempWidgets.find(obj => {\n      return obj.title === widgetName;\n    });\n    toEdit.links.push({\n      url: url,\n      name: website\n    });\n    tempWidgets.map(obj => obj);\n  }).then(() => {\n    return user.update({\n      name: getUserName(),\n      //widgets: [{widgetTitle: \"bruh\", links: [{linkName : url}, {}, {}]}],\n      widgets: tempWidgets,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    }, {\n      merge: true\n    }).catch(function (error) {\n      console.error(\"Error writing new message to database\", error);\n    });\n  }).catch(error => {\n    console.log(\"Error getting document:\", error);\n  });\n}\nexport function deleteLink(widgetName, url) {\n  let user = firebase.firestore().collection(\"users\").doc(getUserName());\n  user.get().then(doc => {\n    if (doc.exists) {\n      return doc.data().widgets;\n    } else {}\n  }).then(widgets => {\n    let widget = widgets.find(obj => {\n      return obj.title == widgetName;\n    });\n    widget.links = widget.links.filter(obj => {\n      return obj.url !== url;\n    });\n    user.update({\n      name: getUserName(),\n      widgets: widgets,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    }, {\n      merge: true\n    }).catch(function (error) {\n      console.error(\"Error writing new message to database\", error);\n    });\n  });\n}\nexport function deleteWidget(widgetName) {\n  let user = firebase.firestore().collection(\"users\").doc(getUserName());\n  user.get().then(doc => {\n    if (doc.exists) {\n      console.log(\"doc exists\");\n      console.log(doc.data().widgets);\n      return doc.data().widgets;\n    } else {\n      console.log(\"doc doesn't exit\");\n    }\n  }).then(widgets => {\n    console.log(\"216 \" + widgets);\n    const newState = widgets.filter(obj => {\n      return obj.title !== widgetName;\n    });\n    user.update({\n      name: getUserName(),\n      widgets: newState,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    }, {\n      merge: true\n    }).catch(function (error) {\n      console.error(\"Error writing new message to database\", error);\n    });\n  });\n}\nexport function changeWidgetTitle(widgetName, newWidgetTitle) {\n  let user = firebase.firestore().collection(\"users\").doc(getUserName());\n  user.get().then(doc => {\n    if (doc.exists) {\n      return doc.data().widgets;\n    }\n  }).then(widgets => {\n    const widget = widgets.find(obj => {\n      return obj.title === widgetName;\n    });\n    widget.title = newWidgetTitle;\n    console.log(widget.title);\n    user.update({\n      name: getUserName(),\n      widgets: widgets,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    }, {\n      merge: true\n    }).catch(function (error) {\n      console.error(\"Error writing new message to database\", error);\n    });\n  });\n} // Loads chat messages history and listens for upcoming ones.\n// Returns true if user is signed-in. Otherwise false and displays a message.\n\nexport function checkSignedInWithMessage() {\n  // Return true if the user is signed in Firebase\n  if (isUserSignedIn()) {\n    return true;\n  }\n} // Resets the given MaterialTextField.\n\nexport function resetMaterialTextfield(element) {\n  element.value = \"\";\n  element.parentNode.MaterialTextfield.boundUpdateClassesHandler();\n} // Checks that the Firebase SDK has been correctly setup and configured.\n\nexport function checkSetup() {\n  if (!window.firebase || !(firebase.app instanceof Function) || !firebase.app().options) {\n    window.alert(\"You have not configured and imported the Firebase SDK. \" + \"Make sure you go through the codelab setup instructions and make \" + \"sure you are running the codelab using `firebase serve`\");\n  }\n}\ncheckSetup(); // initialize Firebase\n// initFirebaseAuth();\n// TODO: Enable Firebase Performance Monitoring.\n// We load currently existing chat messages and listen to new ones.\n\nexport function bruh() {\n  console.log(\"have a wonderful day!\");\n}","map":{"version":3,"sources":["C:/Users/EthanP/Documents/cubstart/tabulate/tab-ulate/src/scripts/login.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","console","log","auth","db","firestore","signIn","provider","GoogleAuthProvider","signInWithPopup","then","user","collection","doc","getUserName","get","exists","set","name","widgets","timestamp","FieldValue","serverTimestamp","catch","error","signOut","getProfilePicUrl","currentUser","photoURL","displayName","isUserSignedIn","addWidget","widgetTitle","tempWidgets","data","push","title","links","update","merge","getWidgets","Promise","addLinkToWidget","widgetName","website","url","toEdit","find","obj","map","deleteLink","widget","filter","deleteWidget","newState","changeWidgetTitle","newWidgetTitle","checkSignedInWithMessage","resetMaterialTextfield","element","value","parentNode","MaterialTextfield","boundUpdateClassesHandler","checkSetup","window","app","Function","options","alert","bruh"],"mappings":"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","sourcesContent":["/**\r\n * Copyright 2018 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\"use strict\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAwcnfyJDrxYTVGnbGJ39pwyRPmbbln8jI\",\r\n  authDomain: \"tabulate-da8ac.firebaseapp.com\",\r\n  projectId: \"tabulate-da8ac\",\r\n  storageBucket: \"tabulate-da8ac.appspot.com\",\r\n  messagingSenderId: \"600957298630\",\r\n  appId: \"1:600957298630:web:8dff818513beaf9c9734c7\",\r\n  measurementId: \"G-FRRT9SB5QF\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nconsole.log(firebase);\r\n\r\nexport const auth = firebase.auth();\r\nexport const db = firebase.firestore();\r\n// Signs-in to TabUlate.\r\nexport function signIn() {\r\n  // TODO 1: Sign in Firebase with credential from the Google user.\r\n  // Sign into Firebase using popup auth & Google as the identity provider.\r\n  let provider = new firebase.auth.GoogleAuthProvider();\r\n  firebase\r\n    .auth()\r\n    .signInWithPopup(provider)\r\n    .then(() => {\r\n      let user = firebase.firestore().collection(\"users\").doc(getUserName());\r\n      user.get().then((doc) => {\r\n        if (!doc.exists) {\r\n          user\r\n            .set({\r\n              name: getUserName(),\r\n              widgets: [], // do this at sign-in\r\n              timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            })\r\n            .catch(function (error) {\r\n              console.error(\"Error writing new message to database\", error);\r\n            });\r\n        }\r\n      });\r\n    })\r\n    .catch(function (error) {\r\n      console.error(\"Error signing in\", error);\r\n    });\r\n}\r\n\r\n// Signs-out of TabUlate.\r\nexport function signOut() {\r\n  firebase.auth().signOut();\r\n}\r\n\r\n// Initiate firebase auth.\r\n// export function initFirebaseAuth() {\r\n//   // TODO 3: Initialize Firebase.\r\n//   firebase.auth().onAuthStateChanged(authStateObserver);\r\n// }\r\n\r\n// Returns the signed-in user's profile Pic URL.\r\nexport function getProfilePicUrl() {\r\n  return (\r\n    firebase.auth().currentUser.photoURL ||\r\n    \"https://lh3.googleusercontent.com/-5NpIVUCd2lE/AAAAAAAAAAI/AAAAAAAAAAA/AMZuucmn22K-OnZPInLvX19yR_TVKiUFCA/s96-c/photo.jpg\"\r\n  );\r\n}\r\n\r\n// Returns the signed-in user's display name.\r\nexport function getUserName() {\r\n  return firebase.auth().currentUser.displayName;\r\n}\r\n\r\n// Returns true if a user is signed-in.\r\nexport function isUserSignedIn() {\r\n  return !!firebase.auth().currentUser;\r\n}\r\n\r\nexport function addWidget(widgetTitle) {\r\n  // Add a new message entry to the database.\r\n  let user = firebase.firestore().collection(\"users\").doc(getUserName());\r\n  console.log(\"78\", user);\r\n\r\n  if (user) {\r\n    user\r\n      .get()\r\n      .then((doc) => {\r\n        let tempWidgets = doc.data().widgets;\r\n        return tempWidgets;\r\n      })\r\n      .then((tempWidgets) => {\r\n        console.log(\"70\", tempWidgets);\r\n        tempWidgets.push({ title: widgetTitle, links: [] });\r\n        console.log(\"73\", tempWidgets);\r\n\r\n        return user\r\n          .update(\r\n            {\r\n              name: getUserName(),\r\n              widgets: tempWidgets,\r\n              timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            },\r\n            { merge: true }\r\n          )\r\n          .catch(function (error) {\r\n            console.error(\"Error writing new message to database\", error);\r\n          });\r\n      });\r\n  }\r\n}\r\n\r\n\r\nexport function getWidgets() {\r\n  // returns the current user's widgets\r\n\r\n  return new Promise(() => {\r\n    let user = firebase.firestore().collection(\"users\").doc(getUserName());\r\n    console.log(\"firebase:\", user);\r\n    user.get().then((doc) => {\r\n      if (doc.exists) {\r\n        console.log(\"doc exists\", doc.data().widgets);\r\n        return doc.data().widgets;\r\n      } else {\r\n        console.log(\"doc doesn't exit\");\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nexport function addLinkToWidget(widgetName, website, url) {\r\n  // Add a new message entry to the database.\r\n  let user = firebase.firestore().collection(\"users\").doc(getUserName());\r\n\r\n  let tempWidgets = [\"check this\"];\r\n  console.log(\"92\");\r\n\r\n  user\r\n    .get()\r\n    .then((doc) => {\r\n      tempWidgets = doc.data().widgets;\r\n      const toEdit = tempWidgets.find((obj) => {\r\n        return obj.title === widgetName;\r\n      });\r\n\r\n      toEdit.links.push({ url: url, name: website });\r\n      tempWidgets.map((obj) => obj);\r\n    })\r\n    .then(() => {\r\n      return user\r\n        .update(\r\n          {\r\n            name: getUserName(),\r\n            //widgets: [{widgetTitle: \"bruh\", links: [{linkName : url}, {}, {}]}],\r\n            widgets: tempWidgets,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n          },\r\n          { merge: true }\r\n        )\r\n        .catch(function (error) {\r\n          console.error(\"Error writing new message to database\", error);\r\n        });\r\n    })\r\n    .catch((error) => {\r\n      console.log(\"Error getting document:\", error);\r\n    });\r\n}\r\n\r\nexport function deleteLink(widgetName, url) {\r\n  let user = firebase.firestore().collection(\"users\").doc(getUserName());\r\n\r\n  user\r\n    .get()\r\n    .then((doc) => {\r\n      if (doc.exists) {\r\n        return doc.data().widgets;\r\n      } else {\r\n      }\r\n    })\r\n    .then((widgets) => {\r\n      let widget = widgets.find((obj) => {\r\n        return obj.title == widgetName;\r\n      });\r\n      widget.links = widget.links.filter((obj) => {\r\n        return obj.url !== url;\r\n      });\r\n\r\n      user\r\n        .update(\r\n          {\r\n            name: getUserName(),\r\n            widgets: widgets,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n          },\r\n          { merge: true }\r\n        )\r\n        .catch(function (error) {\r\n          console.error(\"Error writing new message to database\", error);\r\n        });\r\n    });\r\n}\r\n\r\nexport function deleteWidget(widgetName) {\r\n  let user = firebase.firestore().collection(\"users\").doc(getUserName());\r\n\r\n  user\r\n    .get()\r\n    .then((doc) => {\r\n      if (doc.exists) {\r\n        console.log(\"doc exists\");\r\n        console.log(doc.data().widgets);\r\n        return doc.data().widgets;\r\n      } else {\r\n        console.log(\"doc doesn't exit\");\r\n      }\r\n    })\r\n    .then((widgets) => {\r\n      console.log(\"216 \" + widgets);\r\n      const newState = widgets.filter((obj) => {\r\n        return obj.title !== widgetName;\r\n      });\r\n\r\n      user\r\n        .update(\r\n          {\r\n            name: getUserName(),\r\n            widgets: newState,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n          },\r\n          { merge: true }\r\n        )\r\n        .catch(function (error) {\r\n          console.error(\"Error writing new message to database\", error);\r\n        });\r\n    });\r\n}\r\n\r\nexport function changeWidgetTitle(widgetName, newWidgetTitle) {\r\n  let user = firebase.firestore().collection(\"users\").doc(getUserName());\r\n  user\r\n    .get()\r\n    .then((doc) => {\r\n      if (doc.exists) {\r\n        return doc.data().widgets;\r\n      }\r\n    })\r\n    .then((widgets) => {\r\n      const widget = widgets.find((obj) => {\r\n        return obj.title === widgetName;\r\n      });\r\n      widget.title = newWidgetTitle;\r\n      console.log(widget.title)\r\n      user\r\n        .update(\r\n          {\r\n            name: getUserName(),\r\n            widgets: widgets,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n          },\r\n          { merge: true }\r\n        )\r\n        .catch(function (error) {\r\n          console.error(\"Error writing new message to database\", error);\r\n        });\r\n    });\r\n}\r\n\r\n// Loads chat messages history and listens for upcoming ones.\r\n\r\n// Returns true if user is signed-in. Otherwise false and displays a message.\r\nexport function checkSignedInWithMessage() {\r\n  // Return true if the user is signed in Firebase\r\n  if (isUserSignedIn()) {\r\n    return true;\r\n  }\r\n}\r\n// Resets the given MaterialTextField.\r\nexport function resetMaterialTextfield(element) {\r\n  element.value = \"\";\r\n  element.parentNode.MaterialTextfield.boundUpdateClassesHandler();\r\n}\r\n\r\n// Checks that the Firebase SDK has been correctly setup and configured.\r\nexport function checkSetup() {\r\n  if (\r\n    !window.firebase ||\r\n    !(firebase.app instanceof Function) ||\r\n    !firebase.app().options\r\n  ) {\r\n    window.alert(\r\n      \"You have not configured and imported the Firebase SDK. \" +\r\n        \"Make sure you go through the codelab setup instructions and make \" +\r\n        \"sure you are running the codelab using `firebase serve`\"\r\n    );\r\n  }\r\n}\r\ncheckSetup();\r\n\r\n// initialize Firebase\r\n// initFirebaseAuth();\r\n\r\n// TODO: Enable Firebase Performance Monitoring.\r\n\r\n// We load currently existing chat messages and listen to new ones.\r\n\r\nexport function bruh() {\r\n  console.log(\"have a wonderful day!\");\r\n}\r\n"]},"metadata":{},"sourceType":"module"}